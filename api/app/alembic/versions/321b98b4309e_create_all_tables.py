"""create all tables

Revision ID: 321b98b4309e
Revises: 
Create Date: 2025-10-20 13:07:23.789999

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '321b98b4309e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tb_bb_aggregated',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_email', sa.String(), nullable=True),
    sa.Column('user_username', sa.String(), nullable=True),
    sa.Column('user_hashed_password', sa.String(), nullable=True),
    sa.Column('user_is_active', sa.Boolean(), nullable=True),
    sa.Column('user_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_details_id', sa.Integer(), nullable=True),
    sa.Column('user_details_user_id', sa.Integer(), nullable=True),
    sa.Column('user_details_first_name', sa.String(), nullable=True),
    sa.Column('user_details_last_name', sa.String(), nullable=True),
    sa.Column('user_details_phone', sa.String(), nullable=True),
    sa.Column('user_details_address', sa.Text(), nullable=True),
    sa.Column('user_details_date_of_birth', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_details_profile_picture', sa.String(), nullable=True),
    sa.Column('user_details_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_details_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('account_master_id', sa.Integer(), nullable=True),
    sa.Column('account_master_user_id', sa.Integer(), nullable=True),
    sa.Column('account_master_account_name', sa.String(), nullable=True),
    sa.Column('account_master_account_type', sa.String(), nullable=True),
    sa.Column('account_master_bank_name', sa.String(), nullable=True),
    sa.Column('account_master_account_number', sa.String(), nullable=True),
    sa.Column('account_master_balance', sa.Float(), nullable=True),
    sa.Column('account_master_currency', sa.String(), nullable=True),
    sa.Column('account_master_is_active', sa.Boolean(), nullable=True),
    sa.Column('account_master_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('account_master_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('money_name_master_id', sa.Integer(), nullable=True),
    sa.Column('money_name_master_user_id', sa.Integer(), nullable=True),
    sa.Column('money_name_master_name', sa.String(), nullable=True),
    sa.Column('money_name_master_type', sa.String(), nullable=True),
    sa.Column('money_name_master_category', sa.String(), nullable=True),
    sa.Column('money_name_master_is_default', sa.Boolean(), nullable=True),
    sa.Column('money_name_master_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transaction_master_id', sa.Integer(), nullable=True),
    sa.Column('transaction_master_user_id', sa.Integer(), nullable=True),
    sa.Column('transaction_master_account_id', sa.Integer(), nullable=True),
    sa.Column('transaction_master_money_name_id', sa.Integer(), nullable=True),
    sa.Column('transaction_master_amount', sa.Float(), nullable=True),
    sa.Column('transaction_master_description', sa.String(), nullable=True),
    sa.Column('transaction_master_transaction_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transaction_master_transaction_type', sa.String(), nullable=True),
    sa.Column('transaction_master_payment_method', sa.String(), nullable=True),
    sa.Column('transaction_master_tags', sa.JSON(), nullable=True),
    sa.Column('transaction_master_is_recurring', sa.Boolean(), nullable=True),
    sa.Column('transaction_master_recurring_frequency', sa.String(), nullable=True),
    sa.Column('transaction_master_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transaction_master_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('online_payment_name_master_id', sa.Integer(), nullable=True),
    sa.Column('online_payment_name_master_user_id', sa.Integer(), nullable=True),
    sa.Column('online_payment_name_master_payment_name', sa.String(), nullable=True),
    sa.Column('online_payment_name_master_provider', sa.String(), nullable=True),
    sa.Column('online_payment_name_master_account_email', sa.String(), nullable=True),
    sa.Column('online_payment_name_master_is_active', sa.Boolean(), nullable=True),
    sa.Column('online_payment_name_master_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('online_payment_name_master_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('statement_details_extract_id', sa.Integer(), nullable=True),
    sa.Column('statement_details_extract_user_id', sa.Integer(), nullable=True),
    sa.Column('statement_details_extract_account_id', sa.Integer(), nullable=True),
    sa.Column('statement_details_extract_statement_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('statement_details_extract_transaction_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('statement_details_extract_description', sa.String(), nullable=True),
    sa.Column('statement_details_extract_amount', sa.Float(), nullable=True),
    sa.Column('statement_details_extract_balance', sa.Float(), nullable=True),
    sa.Column('statement_details_extract_category', sa.String(), nullable=True),
    sa.Column('statement_details_extract_extracted_data', sa.JSON(), nullable=True),
    sa.Column('statement_details_extract_is_processed', sa.Boolean(), nullable=True),
    sa.Column('statement_details_extract_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('refresh_token_id', sa.Integer(), nullable=True),
    sa.Column('refresh_token_user_id', sa.Integer(), nullable=True),
    sa.Column('refresh_token_token', sa.String(), nullable=True),
    sa.Column('refresh_token_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('refresh_token_is_revoked', sa.Boolean(), nullable=True),
    sa.Column('refresh_token_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('account_user_id', sa.Integer(), nullable=True),
    sa.Column('account_name', sa.String(), nullable=True),
    sa.Column('account_type', sa.String(), nullable=True),
    sa.Column('account_balance', sa.Float(), nullable=True),
    sa.Column('account_currency', sa.String(), nullable=True),
    sa.Column('account_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('account_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('category_name', sa.String(), nullable=True),
    sa.Column('category_type', sa.String(), nullable=True),
    sa.Column('category_color', sa.String(), nullable=True),
    sa.Column('category_icon', sa.String(), nullable=True),
    sa.Column('category_is_default', sa.Boolean(), nullable=True),
    sa.Column('category_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('transaction_user_id', sa.Integer(), nullable=True),
    sa.Column('transaction_account_id', sa.Integer(), nullable=True),
    sa.Column('transaction_category_id', sa.Integer(), nullable=True),
    sa.Column('transaction_amount', sa.Float(), nullable=True),
    sa.Column('transaction_description', sa.String(), nullable=True),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transaction_type', sa.String(), nullable=True),
    sa.Column('transaction_is_recurring', sa.Boolean(), nullable=True),
    sa.Column('transaction_recurring_frequency', sa.String(), nullable=True),
    sa.Column('transaction_tags', sa.Text(), nullable=True),
    sa.Column('transaction_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transaction_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('loan_id', sa.Integer(), nullable=True),
    sa.Column('loan_user_id', sa.Integer(), nullable=True),
    sa.Column('loan_name', sa.String(), nullable=True),
    sa.Column('loan_principal_amount', sa.Float(), nullable=True),
    sa.Column('loan_interest_rate', sa.Float(), nullable=True),
    sa.Column('loan_term_months', sa.Integer(), nullable=True),
    sa.Column('loan_monthly_payment', sa.Float(), nullable=True),
    sa.Column('loan_remaining_balance', sa.Float(), nullable=True),
    sa.Column('loan_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('loan_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('loan_lender', sa.String(), nullable=True),
    sa.Column('loan_loan_type', sa.String(), nullable=True),
    sa.Column('loan_status', sa.String(), nullable=True),
    sa.Column('loan_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('loan_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('investment_id', sa.Integer(), nullable=True),
    sa.Column('investment_user_id', sa.Integer(), nullable=True),
    sa.Column('investment_name', sa.String(), nullable=True),
    sa.Column('investment_type', sa.String(), nullable=True),
    sa.Column('investment_symbol', sa.String(), nullable=True),
    sa.Column('investment_quantity', sa.Float(), nullable=True),
    sa.Column('investment_purchase_price', sa.Float(), nullable=True),
    sa.Column('investment_current_price', sa.Float(), nullable=True),
    sa.Column('investment_purchase_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('investment_brokerage', sa.String(), nullable=True),
    sa.Column('investment_notes', sa.Text(), nullable=True),
    sa.Column('investment_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('investment_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_aggregated_id'), 'tb_bb_aggregated', ['id'], unique=False, schema='bb')
    op.create_table('tb_bb_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_categories_id'), 'tb_bb_categories', ['id'], unique=False, schema='bb')
    op.create_index(op.f('ix_bb_tb_bb_categories_name'), 'tb_bb_categories', ['name'], unique=False, schema='bb')
    op.create_table('tb_bb_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_users_email'), 'tb_bb_users', ['email'], unique=True, schema='bb')
    op.create_index(op.f('ix_bb_tb_bb_users_id'), 'tb_bb_users', ['id'], unique=False, schema='bb')
    op.create_index(op.f('ix_bb_tb_bb_users_username'), 'tb_bb_users', ['username'], unique=True, schema='bb')
    op.create_table('tb_bb_account_master',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('account_name', sa.String(), nullable=True),
    sa.Column('account_type', sa.String(), nullable=True),
    sa.Column('bank_name', sa.String(), nullable=True),
    sa.Column('account_number', sa.String(), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_account_master_account_name'), 'tb_bb_account_master', ['account_name'], unique=False, schema='bb')
    op.create_index(op.f('ix_bb_tb_bb_account_master_id'), 'tb_bb_account_master', ['id'], unique=False, schema='bb')
    op.create_table('tb_bb_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_accounts_id'), 'tb_bb_accounts', ['id'], unique=False, schema='bb')
    op.create_index(op.f('ix_bb_tb_bb_accounts_name'), 'tb_bb_accounts', ['name'], unique=False, schema='bb')
    op.create_table('tb_bb_investments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('symbol', sa.String(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('purchase_price', sa.Float(), nullable=True),
    sa.Column('current_price', sa.Float(), nullable=True),
    sa.Column('purchase_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('brokerage', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_investments_id'), 'tb_bb_investments', ['id'], unique=False, schema='bb')
    op.create_table('tb_bb_loans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('principal_amount', sa.Float(), nullable=True),
    sa.Column('interest_rate', sa.Float(), nullable=True),
    sa.Column('term_months', sa.Integer(), nullable=True),
    sa.Column('monthly_payment', sa.Float(), nullable=True),
    sa.Column('remaining_balance', sa.Float(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('lender', sa.String(), nullable=True),
    sa.Column('loan_type', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_loans_id'), 'tb_bb_loans', ['id'], unique=False, schema='bb')
    op.create_table('tb_bb_money_name_master',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_money_name_master_id'), 'tb_bb_money_name_master', ['id'], unique=False, schema='bb')
    op.create_index(op.f('ix_bb_tb_bb_money_name_master_name'), 'tb_bb_money_name_master', ['name'], unique=False, schema='bb')
    op.create_table('tb_bb_online_payment_name_master',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('payment_name', sa.String(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('account_email', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_online_payment_name_master_id'), 'tb_bb_online_payment_name_master', ['id'], unique=False, schema='bb')
    op.create_index(op.f('ix_bb_tb_bb_online_payment_name_master_payment_name'), 'tb_bb_online_payment_name_master', ['payment_name'], unique=False, schema='bb')
    op.create_table('tb_bb_refresh_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_revoked', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_refresh_tokens_id'), 'tb_bb_refresh_tokens', ['id'], unique=False, schema='bb')
    op.create_index(op.f('ix_bb_tb_bb_refresh_tokens_token'), 'tb_bb_refresh_tokens', ['token'], unique=True, schema='bb')
    op.create_table('tb_bb_user_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(timezone=True), nullable=True),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_user_details_id'), 'tb_bb_user_details', ['id'], unique=False, schema='bb')
    op.create_table('tb_bb_statement_details_extract',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('statement_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('extracted_data', sa.JSON(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['bb.tb_bb_account_master.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_statement_details_extract_id'), 'tb_bb_statement_details_extract', ['id'], unique=False, schema='bb')
    op.create_table('tb_bb_transaction_master',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('money_name_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transaction_type', sa.String(), nullable=True),
    sa.Column('payment_method', sa.String(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurring_frequency', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['bb.tb_bb_account_master.id'], ),
    sa.ForeignKeyConstraint(['money_name_id'], ['bb.tb_bb_money_name_master.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_transaction_master_id'), 'tb_bb_transaction_master', ['id'], unique=False, schema='bb')
    op.create_table('tb_bb_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurring_frequency', sa.String(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['bb.tb_bb_accounts.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['bb.tb_bb_categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['bb.tb_bb_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='bb'
    )
    op.create_index(op.f('ix_bb_tb_bb_transactions_id'), 'tb_bb_transactions', ['id'], unique=False, schema='bb')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_bb_tb_bb_transactions_id'), table_name='tb_bb_transactions', schema='bb')
    op.drop_table('tb_bb_transactions', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_transaction_master_id'), table_name='tb_bb_transaction_master', schema='bb')
    op.drop_table('tb_bb_transaction_master', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_statement_details_extract_id'), table_name='tb_bb_statement_details_extract', schema='bb')
    op.drop_table('tb_bb_statement_details_extract', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_user_details_id'), table_name='tb_bb_user_details', schema='bb')
    op.drop_table('tb_bb_user_details', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_refresh_tokens_token'), table_name='tb_bb_refresh_tokens', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_refresh_tokens_id'), table_name='tb_bb_refresh_tokens', schema='bb')
    op.drop_table('tb_bb_refresh_tokens', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_online_payment_name_master_payment_name'), table_name='tb_bb_online_payment_name_master', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_online_payment_name_master_id'), table_name='tb_bb_online_payment_name_master', schema='bb')
    op.drop_table('tb_bb_online_payment_name_master', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_money_name_master_name'), table_name='tb_bb_money_name_master', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_money_name_master_id'), table_name='tb_bb_money_name_master', schema='bb')
    op.drop_table('tb_bb_money_name_master', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_loans_id'), table_name='tb_bb_loans', schema='bb')
    op.drop_table('tb_bb_loans', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_investments_id'), table_name='tb_bb_investments', schema='bb')
    op.drop_table('tb_bb_investments', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_accounts_name'), table_name='tb_bb_accounts', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_accounts_id'), table_name='tb_bb_accounts', schema='bb')
    op.drop_table('tb_bb_accounts', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_account_master_id'), table_name='tb_bb_account_master', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_account_master_account_name'), table_name='tb_bb_account_master', schema='bb')
    op.drop_table('tb_bb_account_master', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_users_username'), table_name='tb_bb_users', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_users_id'), table_name='tb_bb_users', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_users_email'), table_name='tb_bb_users', schema='bb')
    op.drop_table('tb_bb_users', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_categories_name'), table_name='tb_bb_categories', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_categories_id'), table_name='tb_bb_categories', schema='bb')
    op.drop_table('tb_bb_categories', schema='bb')
    op.drop_index(op.f('ix_bb_tb_bb_aggregated_id'), table_name='tb_bb_aggregated', schema='bb')
    op.drop_table('tb_bb_aggregated', schema='bb')
    # ### end Alembic commands ###
